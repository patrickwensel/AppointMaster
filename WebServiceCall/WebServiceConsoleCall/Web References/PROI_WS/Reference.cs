//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5485.
// 
#pragma warning disable 1591

namespace WebServiceConsoleCall.PROI_WS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ROIServicesSoap", Namespace="http://tempuri.org/")]
    public partial class ROIServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback versionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPracticeAccessKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPracticeServerDirectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPracticeServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPracticeWebServicesURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPracticeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientsWithAppointmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPracticeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRoiPerPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback testRoiReplyPerPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPracticeSyncDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRoiPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback testCreatePracticeRoiOperationCompleted;
        
        private System.Threading.SendOrPostCallback getreviewStatisticOperationCompleted;
        
        private System.Threading.SendOrPostCallback getreviewPostedPerPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setReviewFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback whatIsMyIpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ROIServices() {
            this.Url = global::WebServiceConsoleCall.Properties.Settings.Default.WebServiceConsoleCall_PROI_WS_ROIServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event versionCompletedEventHandler versionCompleted;
        
        /// <remarks/>
        public event getPracticeAccessKeyCompletedEventHandler getPracticeAccessKeyCompleted;
        
        /// <remarks/>
        public event getPracticeServerDirectCompletedEventHandler getPracticeServerDirectCompleted;
        
        /// <remarks/>
        public event getPracticeServerCompletedEventHandler getPracticeServerCompleted;
        
        /// <remarks/>
        public event getPracticeWebServicesURLCompletedEventHandler getPracticeWebServicesURLCompleted;
        
        /// <remarks/>
        public event getPracticeDataCompletedEventHandler getPracticeDataCompleted;
        
        /// <remarks/>
        public event getPatientsWithAppointmentsCompletedEventHandler getPatientsWithAppointmentsCompleted;
        
        /// <remarks/>
        public event setPracticeDataCompletedEventHandler setPracticeDataCompleted;
        
        /// <remarks/>
        public event createPracticeCompletedEventHandler createPracticeCompleted;
        
        /// <remarks/>
        public event getRoiPerPracticeCompletedEventHandler getRoiPerPracticeCompleted;
        
        /// <remarks/>
        public event testRoiReplyPerPracticeCompletedEventHandler testRoiReplyPerPracticeCompleted;
        
        /// <remarks/>
        public event getPracticeSyncDataCompletedEventHandler getPracticeSyncDataCompleted;
        
        /// <remarks/>
        public event createRoiPracticeCompletedEventHandler createRoiPracticeCompleted;
        
        /// <remarks/>
        public event testCreatePracticeRoiCompletedEventHandler testCreatePracticeRoiCompleted;
        
        /// <remarks/>
        public event getreviewStatisticCompletedEventHandler getreviewStatisticCompleted;
        
        /// <remarks/>
        public event getreviewPostedPerPracticeCompletedEventHandler getreviewPostedPerPracticeCompleted;
        
        /// <remarks/>
        public event setReviewFlagCompletedEventHandler setReviewFlagCompleted;
        
        /// <remarks/>
        public event whatIsMyIpCompletedEventHandler whatIsMyIpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/version", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string version() {
            object[] results = this.Invoke("version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void versionAsync() {
            this.versionAsync(null);
        }
        
        /// <remarks/>
        public void versionAsync(object userState) {
            if ((this.versionOperationCompleted == null)) {
                this.versionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnversionOperationCompleted);
            }
            this.InvokeAsync("version", new object[0], this.versionOperationCompleted, userState);
        }
        
        private void OnversionOperationCompleted(object arg) {
            if ((this.versionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.versionCompleted(this, new versionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPracticeAccessKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPracticeAccessKey(string dataLinkuserId, string dataLinkPassword) {
            object[] results = this.Invoke("getPracticeAccessKey", new object[] {
                        dataLinkuserId,
                        dataLinkPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPracticeAccessKeyAsync(string dataLinkuserId, string dataLinkPassword) {
            this.getPracticeAccessKeyAsync(dataLinkuserId, dataLinkPassword, null);
        }
        
        /// <remarks/>
        public void getPracticeAccessKeyAsync(string dataLinkuserId, string dataLinkPassword, object userState) {
            if ((this.getPracticeAccessKeyOperationCompleted == null)) {
                this.getPracticeAccessKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPracticeAccessKeyOperationCompleted);
            }
            this.InvokeAsync("getPracticeAccessKey", new object[] {
                        dataLinkuserId,
                        dataLinkPassword}, this.getPracticeAccessKeyOperationCompleted, userState);
        }
        
        private void OngetPracticeAccessKeyOperationCompleted(object arg) {
            if ((this.getPracticeAccessKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPracticeAccessKeyCompleted(this, new getPracticeAccessKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPracticeServerDirect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPracticeServerDirect(string dataLinkuserId, string dataLinkPassword) {
            object[] results = this.Invoke("getPracticeServerDirect", new object[] {
                        dataLinkuserId,
                        dataLinkPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPracticeServerDirectAsync(string dataLinkuserId, string dataLinkPassword) {
            this.getPracticeServerDirectAsync(dataLinkuserId, dataLinkPassword, null);
        }
        
        /// <remarks/>
        public void getPracticeServerDirectAsync(string dataLinkuserId, string dataLinkPassword, object userState) {
            if ((this.getPracticeServerDirectOperationCompleted == null)) {
                this.getPracticeServerDirectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPracticeServerDirectOperationCompleted);
            }
            this.InvokeAsync("getPracticeServerDirect", new object[] {
                        dataLinkuserId,
                        dataLinkPassword}, this.getPracticeServerDirectOperationCompleted, userState);
        }
        
        private void OngetPracticeServerDirectOperationCompleted(object arg) {
            if ((this.getPracticeServerDirectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPracticeServerDirectCompleted(this, new getPracticeServerDirectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPracticeServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPracticeServer(string practiceAccessKey) {
            object[] results = this.Invoke("getPracticeServer", new object[] {
                        practiceAccessKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPracticeServerAsync(string practiceAccessKey) {
            this.getPracticeServerAsync(practiceAccessKey, null);
        }
        
        /// <remarks/>
        public void getPracticeServerAsync(string practiceAccessKey, object userState) {
            if ((this.getPracticeServerOperationCompleted == null)) {
                this.getPracticeServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPracticeServerOperationCompleted);
            }
            this.InvokeAsync("getPracticeServer", new object[] {
                        practiceAccessKey}, this.getPracticeServerOperationCompleted, userState);
        }
        
        private void OngetPracticeServerOperationCompleted(object arg) {
            if ((this.getPracticeServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPracticeServerCompleted(this, new getPracticeServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPracticeWebServicesURL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPracticeWebServicesURL(string practiceAccessKey) {
            object[] results = this.Invoke("getPracticeWebServicesURL", new object[] {
                        practiceAccessKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPracticeWebServicesURLAsync(string practiceAccessKey) {
            this.getPracticeWebServicesURLAsync(practiceAccessKey, null);
        }
        
        /// <remarks/>
        public void getPracticeWebServicesURLAsync(string practiceAccessKey, object userState) {
            if ((this.getPracticeWebServicesURLOperationCompleted == null)) {
                this.getPracticeWebServicesURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPracticeWebServicesURLOperationCompleted);
            }
            this.InvokeAsync("getPracticeWebServicesURL", new object[] {
                        practiceAccessKey}, this.getPracticeWebServicesURLOperationCompleted, userState);
        }
        
        private void OngetPracticeWebServicesURLOperationCompleted(object arg) {
            if ((this.getPracticeWebServicesURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPracticeWebServicesURLCompleted(this, new getPracticeWebServicesURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPracticeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public accountData getPracticeData(string practiceAccessKey) {
            object[] results = this.Invoke("getPracticeData", new object[] {
                        practiceAccessKey});
            return ((accountData)(results[0]));
        }
        
        /// <remarks/>
        public void getPracticeDataAsync(string practiceAccessKey) {
            this.getPracticeDataAsync(practiceAccessKey, null);
        }
        
        /// <remarks/>
        public void getPracticeDataAsync(string practiceAccessKey, object userState) {
            if ((this.getPracticeDataOperationCompleted == null)) {
                this.getPracticeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPracticeDataOperationCompleted);
            }
            this.InvokeAsync("getPracticeData", new object[] {
                        practiceAccessKey}, this.getPracticeDataOperationCompleted, userState);
        }
        
        private void OngetPracticeDataOperationCompleted(object arg) {
            if ((this.getPracticeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPracticeDataCompleted(this, new getPracticeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPatientsWithAppointments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public patientMainContact[] getPatientsWithAppointments(string practiceAccessKey, System.DateTime day) {
            object[] results = this.Invoke("getPatientsWithAppointments", new object[] {
                        practiceAccessKey,
                        day});
            return ((patientMainContact[])(results[0]));
        }
        
        /// <remarks/>
        public void getPatientsWithAppointmentsAsync(string practiceAccessKey, System.DateTime day) {
            this.getPatientsWithAppointmentsAsync(practiceAccessKey, day, null);
        }
        
        /// <remarks/>
        public void getPatientsWithAppointmentsAsync(string practiceAccessKey, System.DateTime day, object userState) {
            if ((this.getPatientsWithAppointmentsOperationCompleted == null)) {
                this.getPatientsWithAppointmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientsWithAppointmentsOperationCompleted);
            }
            this.InvokeAsync("getPatientsWithAppointments", new object[] {
                        practiceAccessKey,
                        day}, this.getPatientsWithAppointmentsOperationCompleted, userState);
        }
        
        private void OngetPatientsWithAppointmentsOperationCompleted(object arg) {
            if ((this.getPatientsWithAppointmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientsWithAppointmentsCompleted(this, new getPatientsWithAppointmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setPracticeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setPracticeData(string practiceAccessKey, accountDataWrite data) {
            object[] results = this.Invoke("setPracticeData", new object[] {
                        practiceAccessKey,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setPracticeDataAsync(string practiceAccessKey, accountDataWrite data) {
            this.setPracticeDataAsync(practiceAccessKey, data, null);
        }
        
        /// <remarks/>
        public void setPracticeDataAsync(string practiceAccessKey, accountDataWrite data, object userState) {
            if ((this.setPracticeDataOperationCompleted == null)) {
                this.setPracticeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPracticeDataOperationCompleted);
            }
            this.InvokeAsync("setPracticeData", new object[] {
                        practiceAccessKey,
                        data}, this.setPracticeDataOperationCompleted, userState);
        }
        
        private void OnsetPracticeDataOperationCompleted(object arg) {
            if ((this.setPracticeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPracticeDataCompleted(this, new setPracticeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createPractice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createPractice(string practiceAccessKeys, accountDataWrite data) {
            object[] results = this.Invoke("createPractice", new object[] {
                        practiceAccessKeys,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPracticeAsync(string practiceAccessKeys, accountDataWrite data) {
            this.createPracticeAsync(practiceAccessKeys, data, null);
        }
        
        /// <remarks/>
        public void createPracticeAsync(string practiceAccessKeys, accountDataWrite data, object userState) {
            if ((this.createPracticeOperationCompleted == null)) {
                this.createPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePracticeOperationCompleted);
            }
            this.InvokeAsync("createPractice", new object[] {
                        practiceAccessKeys,
                        data}, this.createPracticeOperationCompleted, userState);
        }
        
        private void OncreatePracticeOperationCompleted(object arg) {
            if ((this.createPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPracticeCompleted(this, new createPracticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRoiPerPractice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public RoiReplyPerPractice[] getRoiPerPractice(int DB, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] RoiRequestPerPractice[] requests) {
            object[] results = this.Invoke("getRoiPerPractice", new object[] {
                        DB,
                        requests});
            return ((RoiReplyPerPractice[])(results[0]));
        }
        
        /// <remarks/>
        public void getRoiPerPracticeAsync(int DB, RoiRequestPerPractice[] requests) {
            this.getRoiPerPracticeAsync(DB, requests, null);
        }
        
        /// <remarks/>
        public void getRoiPerPracticeAsync(int DB, RoiRequestPerPractice[] requests, object userState) {
            if ((this.getRoiPerPracticeOperationCompleted == null)) {
                this.getRoiPerPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRoiPerPracticeOperationCompleted);
            }
            this.InvokeAsync("getRoiPerPractice", new object[] {
                        DB,
                        requests}, this.getRoiPerPracticeOperationCompleted, userState);
        }
        
        private void OngetRoiPerPracticeOperationCompleted(object arg) {
            if ((this.getRoiPerPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRoiPerPracticeCompleted(this, new getRoiPerPracticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/testRoiReplyPerPractice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string testRoiReplyPerPractice(string password, int db, string phone0, string phone1, string email, string patientName, string patientFirstName, System.DateTime date) {
            object[] results = this.Invoke("testRoiReplyPerPractice", new object[] {
                        password,
                        db,
                        phone0,
                        phone1,
                        email,
                        patientName,
                        patientFirstName,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testRoiReplyPerPracticeAsync(string password, int db, string phone0, string phone1, string email, string patientName, string patientFirstName, System.DateTime date) {
            this.testRoiReplyPerPracticeAsync(password, db, phone0, phone1, email, patientName, patientFirstName, date, null);
        }
        
        /// <remarks/>
        public void testRoiReplyPerPracticeAsync(string password, int db, string phone0, string phone1, string email, string patientName, string patientFirstName, System.DateTime date, object userState) {
            if ((this.testRoiReplyPerPracticeOperationCompleted == null)) {
                this.testRoiReplyPerPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestRoiReplyPerPracticeOperationCompleted);
            }
            this.InvokeAsync("testRoiReplyPerPractice", new object[] {
                        password,
                        db,
                        phone0,
                        phone1,
                        email,
                        patientName,
                        patientFirstName,
                        date}, this.testRoiReplyPerPracticeOperationCompleted, userState);
        }
        
        private void OntestRoiReplyPerPracticeOperationCompleted(object arg) {
            if ((this.testRoiReplyPerPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testRoiReplyPerPracticeCompleted(this, new testRoiReplyPerPracticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPracticeSyncData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public accountDataReply getPracticeSyncData(string DB) {
            object[] results = this.Invoke("getPracticeSyncData", new object[] {
                        DB});
            return ((accountDataReply)(results[0]));
        }
        
        /// <remarks/>
        public void getPracticeSyncDataAsync(string DB) {
            this.getPracticeSyncDataAsync(DB, null);
        }
        
        /// <remarks/>
        public void getPracticeSyncDataAsync(string DB, object userState) {
            if ((this.getPracticeSyncDataOperationCompleted == null)) {
                this.getPracticeSyncDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPracticeSyncDataOperationCompleted);
            }
            this.InvokeAsync("getPracticeSyncData", new object[] {
                        DB}, this.getPracticeSyncDataOperationCompleted, userState);
        }
        
        private void OngetPracticeSyncDataOperationCompleted(object arg) {
            if ((this.getPracticeSyncDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPracticeSyncDataCompleted(this, new getPracticeSyncDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createRoiPractice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public accountDataReply createRoiPractice(accountDataRequest accountData) {
            object[] results = this.Invoke("createRoiPractice", new object[] {
                        accountData});
            return ((accountDataReply)(results[0]));
        }
        
        /// <remarks/>
        public void createRoiPracticeAsync(accountDataRequest accountData) {
            this.createRoiPracticeAsync(accountData, null);
        }
        
        /// <remarks/>
        public void createRoiPracticeAsync(accountDataRequest accountData, object userState) {
            if ((this.createRoiPracticeOperationCompleted == null)) {
                this.createRoiPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRoiPracticeOperationCompleted);
            }
            this.InvokeAsync("createRoiPractice", new object[] {
                        accountData}, this.createRoiPracticeOperationCompleted, userState);
        }
        
        private void OncreateRoiPracticeOperationCompleted(object arg) {
            if ((this.createRoiPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRoiPracticeCompleted(this, new createRoiPracticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/testCreatePracticeRoi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string testCreatePracticeRoi(string password, int DB) {
            object[] results = this.Invoke("testCreatePracticeRoi", new object[] {
                        password,
                        DB});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testCreatePracticeRoiAsync(string password, int DB) {
            this.testCreatePracticeRoiAsync(password, DB, null);
        }
        
        /// <remarks/>
        public void testCreatePracticeRoiAsync(string password, int DB, object userState) {
            if ((this.testCreatePracticeRoiOperationCompleted == null)) {
                this.testCreatePracticeRoiOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestCreatePracticeRoiOperationCompleted);
            }
            this.InvokeAsync("testCreatePracticeRoi", new object[] {
                        password,
                        DB}, this.testCreatePracticeRoiOperationCompleted, userState);
        }
        
        private void OntestCreatePracticeRoiOperationCompleted(object arg) {
            if ((this.testCreatePracticeRoiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCreatePracticeRoiCompleted(this, new testCreatePracticeRoiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getreviewStatistic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public reviewStatistic getreviewStatistic(string dataLinkuserId, string dataLinkPassword) {
            object[] results = this.Invoke("getreviewStatistic", new object[] {
                        dataLinkuserId,
                        dataLinkPassword});
            return ((reviewStatistic)(results[0]));
        }
        
        /// <remarks/>
        public void getreviewStatisticAsync(string dataLinkuserId, string dataLinkPassword) {
            this.getreviewStatisticAsync(dataLinkuserId, dataLinkPassword, null);
        }
        
        /// <remarks/>
        public void getreviewStatisticAsync(string dataLinkuserId, string dataLinkPassword, object userState) {
            if ((this.getreviewStatisticOperationCompleted == null)) {
                this.getreviewStatisticOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetreviewStatisticOperationCompleted);
            }
            this.InvokeAsync("getreviewStatistic", new object[] {
                        dataLinkuserId,
                        dataLinkPassword}, this.getreviewStatisticOperationCompleted, userState);
        }
        
        private void OngetreviewStatisticOperationCompleted(object arg) {
            if ((this.getreviewStatisticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getreviewStatisticCompleted(this, new getreviewStatisticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getreviewPostedPerPractice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public reviewPosted[] getreviewPostedPerPractice(string dataLinkuserId, string dataLinkPassword) {
            object[] results = this.Invoke("getreviewPostedPerPractice", new object[] {
                        dataLinkuserId,
                        dataLinkPassword});
            return ((reviewPosted[])(results[0]));
        }
        
        /// <remarks/>
        public void getreviewPostedPerPracticeAsync(string dataLinkuserId, string dataLinkPassword) {
            this.getreviewPostedPerPracticeAsync(dataLinkuserId, dataLinkPassword, null);
        }
        
        /// <remarks/>
        public void getreviewPostedPerPracticeAsync(string dataLinkuserId, string dataLinkPassword, object userState) {
            if ((this.getreviewPostedPerPracticeOperationCompleted == null)) {
                this.getreviewPostedPerPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetreviewPostedPerPracticeOperationCompleted);
            }
            this.InvokeAsync("getreviewPostedPerPractice", new object[] {
                        dataLinkuserId,
                        dataLinkPassword}, this.getreviewPostedPerPracticeOperationCompleted, userState);
        }
        
        private void OngetreviewPostedPerPracticeOperationCompleted(object arg) {
            if ((this.getreviewPostedPerPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getreviewPostedPerPracticeCompleted(this, new getreviewPostedPerPracticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setReviewFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setReviewFlag(string dataLinkuserId, string dataLinkPassword, string reviewId, bool flagged) {
            object[] results = this.Invoke("setReviewFlag", new object[] {
                        dataLinkuserId,
                        dataLinkPassword,
                        reviewId,
                        flagged});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setReviewFlagAsync(string dataLinkuserId, string dataLinkPassword, string reviewId, bool flagged) {
            this.setReviewFlagAsync(dataLinkuserId, dataLinkPassword, reviewId, flagged, null);
        }
        
        /// <remarks/>
        public void setReviewFlagAsync(string dataLinkuserId, string dataLinkPassword, string reviewId, bool flagged, object userState) {
            if ((this.setReviewFlagOperationCompleted == null)) {
                this.setReviewFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetReviewFlagOperationCompleted);
            }
            this.InvokeAsync("setReviewFlag", new object[] {
                        dataLinkuserId,
                        dataLinkPassword,
                        reviewId,
                        flagged}, this.setReviewFlagOperationCompleted, userState);
        }
        
        private void OnsetReviewFlagOperationCompleted(object arg) {
            if ((this.setReviewFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setReviewFlagCompleted(this, new setReviewFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/whatIsMyIp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string whatIsMyIp() {
            object[] results = this.Invoke("whatIsMyIp", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void whatIsMyIpAsync() {
            this.whatIsMyIpAsync(null);
        }
        
        /// <remarks/>
        public void whatIsMyIpAsync(object userState) {
            if ((this.whatIsMyIpOperationCompleted == null)) {
                this.whatIsMyIpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwhatIsMyIpOperationCompleted);
            }
            this.InvokeAsync("whatIsMyIp", new object[0], this.whatIsMyIpOperationCompleted, userState);
        }
        
        private void OnwhatIsMyIpOperationCompleted(object arg) {
            if ((this.whatIsMyIpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.whatIsMyIpCompleted(this, new whatIsMyIpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class accountData {
        
        private int idField;
        
        private System.DateTime createdField;
        
        private string contactField;
        
        private string notificationEmailField;
        
        private string websiteField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string mainPhoneField;
        
        private string serverField;
        
        private System.DateTime lastSyncField;
        
        private int nbSyncField;
        
        private int timeZoneField;
        
        private string softwareField;
        
        private int nbRatingsField;
        
        private int nbReviewsField;
        
        private string reviewsUrlField;
        
        private System.DateTime lastReviewField;
        
        private string loginURLonServerField;
        
        private bool useReminderField;
        
        private string errorField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string notificationEmail {
            get {
                return this.notificationEmailField;
            }
            set {
                this.notificationEmailField = value;
            }
        }
        
        /// <remarks/>
        public string website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string mainPhone {
            get {
                return this.mainPhoneField;
            }
            set {
                this.mainPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastSync {
            get {
                return this.lastSyncField;
            }
            set {
                this.lastSyncField = value;
            }
        }
        
        /// <remarks/>
        public int nbSync {
            get {
                return this.nbSyncField;
            }
            set {
                this.nbSyncField = value;
            }
        }
        
        /// <remarks/>
        public int timeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
        
        /// <remarks/>
        public int nbRatings {
            get {
                return this.nbRatingsField;
            }
            set {
                this.nbRatingsField = value;
            }
        }
        
        /// <remarks/>
        public int nbReviews {
            get {
                return this.nbReviewsField;
            }
            set {
                this.nbReviewsField = value;
            }
        }
        
        /// <remarks/>
        public string reviewsUrl {
            get {
                return this.reviewsUrlField;
            }
            set {
                this.reviewsUrlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReview {
            get {
                return this.lastReviewField;
            }
            set {
                this.lastReviewField = value;
            }
        }
        
        /// <remarks/>
        public string loginURLonServer {
            get {
                return this.loginURLonServerField;
            }
            set {
                this.loginURLonServerField = value;
            }
        }
        
        /// <remarks/>
        public bool useReminder {
            get {
                return this.useReminderField;
            }
            set {
                this.useReminderField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class reviewPosted {
        
        private string surveyIdField;
        
        private string patientIdField;
        
        private string patientFirstNameField;
        
        private string patientNameField;
        
        private System.DateTime visitDateField;
        
        private System.DateTime postedField;
        
        private int rating100Field;
        
        private bool patientCheckedConfidentialField;
        
        private bool flaggedField;
        
        private string reviewField;
        
        private bool confidentialField;
        
        private string errorField;
        
        /// <remarks/>
        public string surveyId {
            get {
                return this.surveyIdField;
            }
            set {
                this.surveyIdField = value;
            }
        }
        
        /// <remarks/>
        public string patientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string patientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string patientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime visitDate {
            get {
                return this.visitDateField;
            }
            set {
                this.visitDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime posted {
            get {
                return this.postedField;
            }
            set {
                this.postedField = value;
            }
        }
        
        /// <remarks/>
        public int rating100 {
            get {
                return this.rating100Field;
            }
            set {
                this.rating100Field = value;
            }
        }
        
        /// <remarks/>
        public bool patientCheckedConfidential {
            get {
                return this.patientCheckedConfidentialField;
            }
            set {
                this.patientCheckedConfidentialField = value;
            }
        }
        
        /// <remarks/>
        public bool flagged {
            get {
                return this.flaggedField;
            }
            set {
                this.flaggedField = value;
            }
        }
        
        /// <remarks/>
        public string review {
            get {
                return this.reviewField;
            }
            set {
                this.reviewField = value;
            }
        }
        
        /// <remarks/>
        public bool confidential {
            get {
                return this.confidentialField;
            }
            set {
                this.confidentialField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class reviewStatistic {
        
        private System.DateTime firstInvitationSentoutField;
        
        private System.DateTime lastInvitationSentOutField;
        
        private System.DateTime firstReviewPostedField;
        
        private System.DateTime lastReviewPostedField;
        
        private int nbInvitationsSentField;
        
        private int nbSurveysField;
        
        private int nbReviewsField;
        
        private int overallRatingField;
        
        private string errorField;
        
        /// <remarks/>
        public System.DateTime firstInvitationSentout {
            get {
                return this.firstInvitationSentoutField;
            }
            set {
                this.firstInvitationSentoutField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastInvitationSentOut {
            get {
                return this.lastInvitationSentOutField;
            }
            set {
                this.lastInvitationSentOutField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstReviewPosted {
            get {
                return this.firstReviewPostedField;
            }
            set {
                this.firstReviewPostedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReviewPosted {
            get {
                return this.lastReviewPostedField;
            }
            set {
                this.lastReviewPostedField = value;
            }
        }
        
        /// <remarks/>
        public int nbInvitationsSent {
            get {
                return this.nbInvitationsSentField;
            }
            set {
                this.nbInvitationsSentField = value;
            }
        }
        
        /// <remarks/>
        public int nbSurveys {
            get {
                return this.nbSurveysField;
            }
            set {
                this.nbSurveysField = value;
            }
        }
        
        /// <remarks/>
        public int nbReviews {
            get {
                return this.nbReviewsField;
            }
            set {
                this.nbReviewsField = value;
            }
        }
        
        /// <remarks/>
        public int overallRating {
            get {
                return this.overallRatingField;
            }
            set {
                this.overallRatingField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class accountDataRequest {
        
        private int idField;
        
        private string nameField;
        
        private string contactField;
        
        private string notificationEmailField;
        
        private string websiteField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string mainPhoneField;
        
        private DentalSoftware softwareField;
        
        private string userNameField;
        
        private string userPasswordField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string notificationEmail {
            get {
                return this.notificationEmailField;
            }
            set {
                this.notificationEmailField = value;
            }
        }
        
        /// <remarks/>
        public string website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string mainPhone {
            get {
                return this.mainPhoneField;
            }
            set {
                this.mainPhoneField = value;
            }
        }
        
        /// <remarks/>
        public DentalSoftware software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string userPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DentalSoftware {
        
        /// <remarks/>
        EasyDental,
        
        /// <remarks/>
        Dentrix,
        
        /// <remarks/>
        MediSoft,
        
        /// <remarks/>
        Mogo,
        
        /// <remarks/>
        AppointMaster,
        
        /// <remarks/>
        TGI,
        
        /// <remarks/>
        MediFlex,
        
        /// <remarks/>
        Softdent,
        
        /// <remarks/>
        Platinum,
        
        /// <remarks/>
        TPS,
        
        /// <remarks/>
        ChiroSuite,
        
        /// <remarks/>
        AceDental,
        
        /// <remarks/>
        Orthotrac,
        
        /// <remarks/>
        EagleSoft,
        
        /// <remarks/>
        DentalVision,
        
        /// <remarks/>
        DSN,
        
        /// <remarks/>
        AbelDent,
        
        /// <remarks/>
        DentrixG5,
        
        /// <remarks/>
        EagleSoft16,
        
        /// <remarks/>
        MedisoftODBC,
        
        /// <remarks/>
        ClienTrax,
        
        /// <remarks/>
        Lytec,
        
        /// <remarks/>
        PracticeWorks,
        
        /// <remarks/>
        Softdent15,
        
        /// <remarks/>
        Ortho2,
        
        /// <remarks/>
        IMS,
        
        /// <remarks/>
        OPIE,
        
        /// <remarks/>
        AltaPoint,
        
        /// <remarks/>
        OpenDental,
        
        /// <remarks/>
        OrthoEase,
        
        /// <remarks/>
        RoboVet,
        
        /// <remarks/>
        Orthoware,
        
        /// <remarks/>
        PracticePartner,
        
        /// <remarks/>
        VetLogic,
        
        /// <remarks/>
        Insight,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class accountDataReply {
        
        private int idField;
        
        private string dataLinkUserIdField;
        
        private string dataLinkPasswordField;
        
        private string serverField;
        
        private string errorField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string dataLinkUserId {
            get {
                return this.dataLinkUserIdField;
            }
            set {
                this.dataLinkUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string dataLinkPassword {
            get {
                return this.dataLinkPasswordField;
            }
            set {
                this.dataLinkPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RoiTreatmentForPatient {
        
        private string idField;
        
        private string apptIdField;
        
        private string trtCodeField;
        
        private bool treatmentPlanField;
        
        private System.DateTime dateField;
        
        private double amountField;
        
        private string errorField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string apptId {
            get {
                return this.apptIdField;
            }
            set {
                this.apptIdField = value;
            }
        }
        
        /// <remarks/>
        public string trtCode {
            get {
                return this.trtCodeField;
            }
            set {
                this.trtCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool TreatmentPlan {
            get {
                return this.treatmentPlanField;
            }
            set {
                this.treatmentPlanField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public double amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RoiReplyPerPractice {
        
        private int requestOrderField;
        
        private string patientIDField;
        
        private string firstNameField;
        
        private string nameField;
        
        private string errorField;
        
        private RoiTreatmentForPatient[] treatmentsField;
        
        /// <remarks/>
        public int RequestOrder {
            get {
                return this.requestOrderField;
            }
            set {
                this.requestOrderField = value;
            }
        }
        
        /// <remarks/>
        public string patientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public RoiTreatmentForPatient[] treatments {
            get {
                return this.treatmentsField;
            }
            set {
                this.treatmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RoiRequestPerPractice {
        
        private int requestOrderField;
        
        private string patientIDField;
        
        private string patientNameField;
        
        private string patientFirstNameField;
        
        private System.DateTime patientBirthDateField;
        
        private string patientAddressField;
        
        private string patientCityField;
        
        private string patientStateField;
        
        private string patientZIPField;
        
        private string patientPhone0Field;
        
        private string patientPhone1Field;
        
        private string patientPhone2Field;
        
        private string patientPhone3Field;
        
        private string patientEmail0Field;
        
        private string patientEmail1Field;
        
        private string patientEmail2Field;
        
        private System.DateTime leadDateField;
        
        /// <remarks/>
        public int RequestOrder {
            get {
                return this.requestOrderField;
            }
            set {
                this.requestOrderField = value;
            }
        }
        
        /// <remarks/>
        public string patientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string patientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string patientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime patientBirthDate {
            get {
                return this.patientBirthDateField;
            }
            set {
                this.patientBirthDateField = value;
            }
        }
        
        /// <remarks/>
        public string patientAddress {
            get {
                return this.patientAddressField;
            }
            set {
                this.patientAddressField = value;
            }
        }
        
        /// <remarks/>
        public string patientCity {
            get {
                return this.patientCityField;
            }
            set {
                this.patientCityField = value;
            }
        }
        
        /// <remarks/>
        public string patientState {
            get {
                return this.patientStateField;
            }
            set {
                this.patientStateField = value;
            }
        }
        
        /// <remarks/>
        public string patientZIP {
            get {
                return this.patientZIPField;
            }
            set {
                this.patientZIPField = value;
            }
        }
        
        /// <remarks/>
        public string patientPhone0 {
            get {
                return this.patientPhone0Field;
            }
            set {
                this.patientPhone0Field = value;
            }
        }
        
        /// <remarks/>
        public string patientPhone1 {
            get {
                return this.patientPhone1Field;
            }
            set {
                this.patientPhone1Field = value;
            }
        }
        
        /// <remarks/>
        public string patientPhone2 {
            get {
                return this.patientPhone2Field;
            }
            set {
                this.patientPhone2Field = value;
            }
        }
        
        /// <remarks/>
        public string patientPhone3 {
            get {
                return this.patientPhone3Field;
            }
            set {
                this.patientPhone3Field = value;
            }
        }
        
        /// <remarks/>
        public string patientEmail0 {
            get {
                return this.patientEmail0Field;
            }
            set {
                this.patientEmail0Field = value;
            }
        }
        
        /// <remarks/>
        public string patientEmail1 {
            get {
                return this.patientEmail1Field;
            }
            set {
                this.patientEmail1Field = value;
            }
        }
        
        /// <remarks/>
        public string patientEmail2 {
            get {
                return this.patientEmail2Field;
            }
            set {
                this.patientEmail2Field = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LeadDate {
            get {
                return this.leadDateField;
            }
            set {
                this.leadDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class accountDataWrite {
        
        private string nameField;
        
        private Status statusField;
        
        private string contactField;
        
        private string notificationEmailField;
        
        private string websiteField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string mainPhoneField;
        
        private int timeZoneField;
        
        private string softwareField;
        
        private string dataLinkUserIdField;
        
        private string dataLinkPasswordField;
        
        private string userIdField;
        
        private string userPasswordField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public Status status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string notificationEmail {
            get {
                return this.notificationEmailField;
            }
            set {
                this.notificationEmailField = value;
            }
        }
        
        /// <remarks/>
        public string website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string mainPhone {
            get {
                return this.mainPhoneField;
            }
            set {
                this.mainPhoneField = value;
            }
        }
        
        /// <remarks/>
        public int timeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
        
        /// <remarks/>
        public string dataLinkUserId {
            get {
                return this.dataLinkUserIdField;
            }
            set {
                this.dataLinkUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string dataLinkPassword {
            get {
                return this.dataLinkPasswordField;
            }
            set {
                this.dataLinkPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string userPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Status {
        
        /// <remarks/>
        Signup,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Desactivated,
        
        /// <remarks/>
        Archived,
        
        /// <remarks/>
        Demo,
        
        /// <remarks/>
        Test,
        
        /// <remarks/>
        VARRoot,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5485")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class patientMainContact {
        
        private string practiceIdField;
        
        private string appointmentIdField;
        
        private string patientIdField;
        
        private string firstNameField;
        
        private string emailField;
        
        private string homePhoneField;
        
        private string cellPhoneField;
        
        private string workPhoneField;
        
        private string errorField;
        
        /// <remarks/>
        public string practiceId {
            get {
                return this.practiceIdField;
            }
            set {
                this.practiceIdField = value;
            }
        }
        
        /// <remarks/>
        public string appointmentId {
            get {
                return this.appointmentIdField;
            }
            set {
                this.appointmentIdField = value;
            }
        }
        
        /// <remarks/>
        public string patientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string cellPhone {
            get {
                return this.cellPhoneField;
            }
            set {
                this.cellPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string workPhone {
            get {
                return this.workPhoneField;
            }
            set {
                this.workPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void versionCompletedEventHandler(object sender, versionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class versionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal versionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getPracticeAccessKeyCompletedEventHandler(object sender, getPracticeAccessKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPracticeAccessKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPracticeAccessKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getPracticeServerDirectCompletedEventHandler(object sender, getPracticeServerDirectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPracticeServerDirectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPracticeServerDirectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getPracticeServerCompletedEventHandler(object sender, getPracticeServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPracticeServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPracticeServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getPracticeWebServicesURLCompletedEventHandler(object sender, getPracticeWebServicesURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPracticeWebServicesURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPracticeWebServicesURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getPracticeDataCompletedEventHandler(object sender, getPracticeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPracticeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPracticeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public accountData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((accountData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getPatientsWithAppointmentsCompletedEventHandler(object sender, getPatientsWithAppointmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientsWithAppointmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientsWithAppointmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public patientMainContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((patientMainContact[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void setPracticeDataCompletedEventHandler(object sender, setPracticeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPracticeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPracticeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void createPracticeCompletedEventHandler(object sender, createPracticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getRoiPerPracticeCompletedEventHandler(object sender, getRoiPerPracticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRoiPerPracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRoiPerPracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RoiReplyPerPractice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RoiReplyPerPractice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void testRoiReplyPerPracticeCompletedEventHandler(object sender, testRoiReplyPerPracticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testRoiReplyPerPracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testRoiReplyPerPracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getPracticeSyncDataCompletedEventHandler(object sender, getPracticeSyncDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPracticeSyncDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPracticeSyncDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public accountDataReply Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((accountDataReply)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void createRoiPracticeCompletedEventHandler(object sender, createRoiPracticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRoiPracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRoiPracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public accountDataReply Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((accountDataReply)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void testCreatePracticeRoiCompletedEventHandler(object sender, testCreatePracticeRoiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCreatePracticeRoiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCreatePracticeRoiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getreviewStatisticCompletedEventHandler(object sender, getreviewStatisticCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getreviewStatisticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getreviewStatisticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public reviewStatistic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((reviewStatistic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void getreviewPostedPerPracticeCompletedEventHandler(object sender, getreviewPostedPerPracticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getreviewPostedPerPracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getreviewPostedPerPracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public reviewPosted[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((reviewPosted[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void setReviewFlagCompletedEventHandler(object sender, setReviewFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setReviewFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setReviewFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    public delegate void whatIsMyIpCompletedEventHandler(object sender, whatIsMyIpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5483")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class whatIsMyIpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal whatIsMyIpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591