<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add_Another" xml:space="preserve">
    <value>+ Add Another</value>
  </data>
  <data name="All_Checked_In" xml:space="preserve">
    <value>You are all Checked In!</value>
  </data>
  <data name="Appointment_List" xml:space="preserve">
    <value>Appointment List</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>&lt; Back</value>
  </data>
  <data name="Base_API_Address" xml:space="preserve">
    <value>Base API address</value>
  </data>
  <data name="Birthdate" xml:space="preserve">
    <value>Birthdate</value>
  </data>
  <data name="Breed" xml:space="preserve">
    <value>Breed</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CheckIn_Model" xml:space="preserve">
    <value>Check-in Model</value>
  </data>
  <data name="Check_In" xml:space="preserve">
    <value>Check In</value>
  </data>
  <data name="Check_In_A_New_Patient" xml:space="preserve">
    <value>check in a new patient</value>
  </data>
  <data name="Choose_Patient" xml:space="preserve">
    <value>Please select a patient to check in</value>
  </data>
  <data name="Choose_Species" xml:space="preserve">
    <value>Please select a species</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Client_Information" xml:space="preserve">
    <value>Client Information</value>
  </data>
  <data name="Companion" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Demo_Mode" xml:space="preserve">
    <value>Demo Mode</value>
  </data>
  <data name="Digit_Selection" xml:space="preserve">
    <value>4 digit Selection</value>
  </data>
  <data name="Disclaimer" xml:space="preserve">
    <value>Disclaimer</value>
  </data>
  <data name="Disclaimer_Details" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Enable_Local" xml:space="preserve">
    <value>Enable local data only</value>
  </data>
  <data name="Enter_4_Digit" xml:space="preserve">
    <value>Please enter the 4 digit check in code:</value>
  </data>
  <data name="Enter_BaseAPI" xml:space="preserve">
    <value>Please enter the base API address</value>
  </data>
  <data name="Enter_Breed" xml:space="preserve">
    <value>Please enter the breed</value>
  </data>
  <data name="Enter_City" xml:space="preserve">
    <value>Please enter the city</value>
  </data>
  <data name="Enter_Clinic_ID" xml:space="preserve">
    <value>Please enter the Clinic ID</value>
  </data>
  <data name="Enter_Code" xml:space="preserve">
    <value>Please enter the appointment code</value>
  </data>
  <data name="Enter_Email" xml:space="preserve">
    <value>Please enter the email</value>
  </data>
  <data name="Enter_FristName" xml:space="preserve">
    <value>Please enter the first name</value>
  </data>
  <data name="Enter_LaseName" xml:space="preserve">
    <value>Please enter the last name</value>
  </data>
  <data name="Enter_Password" xml:space="preserve">
    <value>Please enter the Password</value>
  </data>
  <data name="Enter_Patient_Name" xml:space="preserve">
    <value>Please enter the patient name</value>
  </data>
  <data name="Enter_Phone" xml:space="preserve">
    <value>Please enter the phone</value>
  </data>
  <data name="Enter_Postal_Code" xml:space="preserve">
    <value>Please enter the postal code</value>
  </data>
  <data name="Enter_Settings_Section" xml:space="preserve">
    <value>Please enter the password to enter settings section</value>
  </data>
  <data name="Enter_Street_Address" xml:space="preserve">
    <value>Please enter the street address</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Invalid_Appointment_Code" xml:space="preserve">
    <value>Invalid appointment code</value>
  </data>
  <data name="Invalid_User" xml:space="preserve">
    <value>Invalid user name or password.</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Main_Menu" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next &gt;</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Patient_Information" xml:space="preserve">
    <value>Patient Information</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Postal_Code" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>Province</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Registration_Step1" xml:space="preserve">
    <value>Step 1 of 5 - Client Information</value>
  </data>
  <data name="Registration_Step2" xml:space="preserve">
    <value>Step 2 of 5 - Address</value>
  </data>
  <data name="Registration_Step3" xml:space="preserve">
    <value>Step 3 of 5 - Contact Information</value>
  </data>
  <data name="Registration_Step4" xml:space="preserve">
    <value>Step 4 of 5 - Patient Information</value>
  </data>
  <data name="Registration_Step5" xml:space="preserve">
    <value>Step 5 of 5 - Confirm</value>
  </data>
  <data name="Return_Tablet" xml:space="preserve">
    <value>Please return the tablet to the Front Desk</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Street_Address" xml:space="preserve">
    <value>Street Address</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Walk_In" xml:space="preserve">
    <value>Walk-In New Registration</value>
  </data>
  <data name="Who_Is_With" xml:space="preserve">
    <value>Who is with you today?</value>
  </data>
  <data name="Zip" xml:space="preserve">
    <value>Zip</value>
  </data>
</root>